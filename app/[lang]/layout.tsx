import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { getTranslation } from "@/lib/getTranslation";
// import { TranslationProvider } from "../../providers/TranslationContext";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Divorce test",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return [{ lang: "en" }, { lang: "nl" }];
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lang: string }>;
}>) {
  const { lang } = await params;

  if (!lang) {
    return (
      <html lang={lang}>
        <body
        // className={`${geistSans.variable} ${geistMono.variable}`}
        >
          <p>NO LANG</p>
        </body>
      </html>
    );
  }

  // const translations = await getTranslation(lang);

  return (
    <html lang={lang}>
      <body
      // className={`${geistSans.variable} ${geistMono.variable}`}
      >
        {/* <TranslationProvider translations={translations}> */}
        {children}
        {/* </TranslationProvider> */}
      </body>
    </html>
  );
}
